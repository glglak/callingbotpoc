/**
 * @module botframework-connector
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { AppCredentials } from './appCredentials';
import { AuthenticatorResult } from './authenticatorResult';
/**
 * CertificateAppCredentials auth implementation
 */
export declare class CertificateAppCredentials extends AppCredentials {
    certificateThumbprint: string;
    certificatePrivateKey: string;
    x5c: string;
    private credentials;
    /**
     * Initializes a new instance of the [CertificateAppCredentials](xref:botframework-connector.CertificateAppCredentials) class.
     *
     * @param appId Microsoft application Id related to the certificate.
     * @param certificateThumbprint A hex encoded thumbprint of the certificate.
     * @param certificatePrivateKey A PEM encoded certificate private key.
     * @param channelAuthTenant Tenant ID of the Azure AD tenant where the bot is created.
     *   * Required for SingleTenant app types.
     *   * Optional for MultiTenant app types. **Note**: '_botframework.com_' is the default tenant when no value is provided.
     *
     * More information: https://learn.microsoft.com/en-us/security/zero-trust/develop/identity-supported-account-types.
     * @param oAuthScope Optional. The scope for the token.
     * @param x5c Optional. Enables application developers to achieve easy certificates roll-over in Azure AD:
     * set this parameter to send the public certificate (BEGIN CERTIFICATE) to Azure AD, so that Azure AD can use it to validate the subject name based on a trusted issuer policy.
     */
    constructor(appId: string, certificateThumbprint: string, certificatePrivateKey: string, channelAuthTenant?: string, oAuthScope?: string, x5c?: string);
    /**
     * @inheritdoc
     */
    getToken(forceRefresh?: boolean): Promise<string>;
    /**
     * @inheritdoc
     */
    protected refreshToken(): Promise<AuthenticatorResult>;
    private createClientApplication;
}
//# sourceMappingURL=certificateAppCredentials.d.ts.map
