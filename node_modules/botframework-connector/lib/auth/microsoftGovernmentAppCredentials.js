"use strict";
/**
 * @module botframework-connector
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MicrosoftGovernmentAppCredentials = void 0;
const governmentConstants_1 = require("./governmentConstants");
const microsoftAppCredentials_1 = require("./microsoftAppCredentials");
/**
 * MicrosoftGovermentAppCredentials auth implementation
 */
class MicrosoftGovernmentAppCredentials extends microsoftAppCredentials_1.MicrosoftAppCredentials {
    /**
     * Initializes a new instance of the [MicrosoftGovernmentAppCredentials](xref:botframework-connector.MicrosoftGovernmentAppCredentials) class.
     *
     * @param {string} appId The Microsoft app ID.
     * @param {string} appPassword The Microsoft app password.
     * @param {string} channelAuthTenant Optional. The oauth token tenant.
     * @param {string} oAuthScope Optional. The scope for the token.
     */
    constructor(appId, appPassword, channelAuthTenant, oAuthScope) {
        super(appId, appPassword, channelAuthTenant, oAuthScope);
        this.appPassword = appPassword;
    }
    GetToChannelFromBotOAuthScope() {
        return governmentConstants_1.GovernmentConstants.ToChannelFromBotOAuthScope;
    }
    GetToChannelFromBotLoginUrlPrefix() {
        return governmentConstants_1.GovernmentConstants.ToChannelFromBotLoginUrlPrefix;
    }
    GetDefaultChannelAuthTenant() {
        return governmentConstants_1.GovernmentConstants.DefaultChannelAuthTenant;
    }
}
exports.MicrosoftGovernmentAppCredentials = MicrosoftGovernmentAppCredentials;
//# sourceMappingURL=microsoftGovernmentAppCredentials.js.map