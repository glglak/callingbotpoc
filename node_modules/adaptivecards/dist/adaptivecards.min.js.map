{"version":3,"sources":["webpack://AdaptiveCards/webpack/universalModuleDefinition","webpack://AdaptiveCards/webpack/bootstrap","webpack://AdaptiveCards/./src/enums.ts","webpack://AdaptiveCards/./src/shared.ts","webpack://AdaptiveCards/./src/utils.ts","webpack://AdaptiveCards/./src/host-config.ts","webpack://AdaptiveCards/./src/adaptivecards.ts","webpack://AdaptiveCards/./src/card-elements.ts","webpack://AdaptiveCards/./src/text-formatters.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ActionStyle","Default","Positive","Destructive","Size","SizeUnit","TextSize","TextWeight","FontType","Spacing","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","FillMode","ActionIconPlacement","InputTextStyle","InputValidationNecessity","ContainerStyle","Emphasis","Accent","Good","Attention","Warning","ValidationError","ContainerFitStatus","Enums","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","getReferencedInputs","inputs","referencedInputs","Error","_i","inputs_1","length","input","RegExp","id","exec","substituteInputValues","contentType","matches","regEx","matchedInput","_a","keys","toLowerCase","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","SizeAndUnit","physicalSize","unit","parse","requireUnitSpecifier","result","Weight","expectedMatchCount","parseInt","Pixel","UUID","generate","d0","Math","random","d1","d2","d3","lut","initialize","toString","Shared","isNullOrEmpty","getEnumValue","targetEnum","defaultValue","setProperty","target","propertyName","propertyValue","undefined","stringToCssColor","color","a","findNextCharacter","html","currIdx","generateUniqueId","appendChild","node","child","getStringValue","obj","getNumberValue","getBoolValue","setNumberProperty","isNaN","setEnumProperty","enumType","targetValue","canDeleteTarget","setArrayProperty","items","propertyValue_1","item","push","toJSON","Array","isArray","parseHostConfigEnum","renderSeparation","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Horizontal","style","paddingTop","marginBottom","borderBottom","lineColor","height","paddingLeft","marginRight","borderRight","width","overflow","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","results","findBreakableIndices","lo","hi","bestBreakIdx","mid","floor","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","Utils","ColorDefinition","defaultColor","subtleColor","default","subtle","TextColorDefinition","_super","_this","apply","arguments","highlightColors","__extends","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","MediaConfig","allowInlinePlayback","defaultPoster","FactTextDefinition","size","isSubtle","weight","wrap","getDefaultWeight","FactTitleDefinition","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","sizeAndUnit","e","ColorSetDefinition","dark","light","accent","good","warning","attention","parseSingleColor","ContainerStyleDefinition","foregroundColors","backgroundColor","highlightBackgroundColor","highlightForegroundColor","BuiltInContainerStyleDefinition","ContainerStyleSet","_allStyles","customStyleArray","customStyleArray_1","customStyle","styleName","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","Version","major","minor","label","_isValid","_major","_minor","_label","versionString","errors","_versionString","error","InvalidPropertyValue","message","compareTo","otherVersion","isValid","HostCapabilities","capabilities","setCapability","version","json","name_1","jsonVersion","hasCapability","areAllMet","hostCapabilities","capabilityName","FontTypeDefinition","fontFamily","fontSizes","small","medium","large","extraLarge","fontWeights","lighter","bolder","monospace","FontTypeSet","getStyleDefinition","Monospace","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontTypes","padding","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","alwaysAllowBleed","String","_legacyFontType","lineHeights","getFontTypeDefinition","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","paddingDefinitionToSpacingDefinition","paddingDefinition","makeCssClassNames","classNames","classNames_1","join","__export","InstanceCreationErrorType","TextFormatters","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createCardObjectInstance","parent","forbiddenTypeNames","allowFallback","createInstanceCallback","createValidationErrorCallback","tryToFallback","typeName","indexOf","raiseParseError","ForbiddenType","setParent","shouldFallback","UnknownType","fallback","setShouldFallback","createActionInstance","AdaptiveCard","actionTypeRegistry","createInstance","errorType","UnknownActionType","ActionTypeNotAllowed","createElementInstance","elementTypeRegistry","UnknownElementType","ElementTypeNotAllowed","SerializableObject","_rawProperties","enableFullJsonRoundTrip","setCustomProperty","getCustomProperty","ValidationFailure","cardObject","ValidationResults","allIds","failures","getFailureIndex","addFailure","failure","index","CardObject","internalValidateProperties","context","DuplicateId","validateProperties","CardElement","_shouldFallback","_lang","_hostConfig","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","requires","horizontalAlignment","customCssSelector","minPixelHeight","internalRenderSeparator","renderedSeparator","separatorOrientation","alwaysBleedSeparators","parentContainer","getParentContainer","getEffectivePadding","parentPhysicalPadding","marginLeft","updateRenderedElementVisibility","displayMode","isDesignMode","isVisible","display","isFirstElement","hideElementDueToOverflow","visibility","raiseElementVisibilityChangedEvent","showElementHiddenDueToOverflow","handleOverflow","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","adjustRenderedElementSize","renderedElement","flex","overrideInternalRender","internalRender","applyPadding","separatorElement","isBleeding","getImmediateSurroundingPadding","physicalPadding","getDefaultPadding","getHasBackground","getPadding","setPadding","asString","supportsMinHeight","getEffectiveStyle","defaultStyle","getForbiddenElementTypes","getForbiddenActionTypes","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","card","getRootElement","onParseElementHandler","onParseElement","raiseParseElementEvent","jsonSeparation","Deprecated","jsonHeight","jsonMinHeight","getActionCount","getActionAt","remove","CardElementContainer","removeItem","render","classList","add","boxSizing","updateLayout","processChildren","cardElement","rootElement","designMode","isRendered","offsetHeight","isLastElement","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isAtTheVeryBottom","isBleedingAtTop","isBleedingAtBottom","currentElement","Container","getAllInputs","getResourceInformation","getElementById","getActionById","allowCustomPadding","lang","defaultHostConfig","useAdvancedCardBottomTruncation","BaseTextBlock","_selectAction","fontType","getEffectiveStyleDefinition","getFontSize","getColorDefinition","colorSet","Dark","Light","setText","_text","text","applyStylesTo","targetElement","fontWeight","colorDefinition","effectiveColor","Lighter","sizeString","weightString","TextBlock","_processedText","_treatAsPlainText","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","getRenderedDomElementType","selectAction","onclick","preventDefault","cancelBubble","execute","tabIndex","setAttribute","formattedText","formatText","allowMarkForTextHighlighting","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","firstElementChild","HTMLElement","marginTop","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","raiseAnchorClickedEvent","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","isRtl","Center","textAlign","Right","Label","forElementId","htmlFor","TextRun","italic","strikethrough","highlight","href","getHref","fontStyle","textDecoration","ShowCardAction","JsonTypeName","RichTextBlock","_inlines","internalAddInline","inline","forceAdd","isInline","jsonInline","textRun","jsonInlines","getInlineCount","getInlineAt","addInline","removeInline","splice","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","jsonFacts","jsonFacts_1","jsonFact","fact","Image","Auto","pixelWidth","pixelHeight","altText","parseDimension","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","raiseImageLoadedEvent","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","mimeType","allowVerticalOverflow","isElementAllowed","forbiddenElementTypes","isInteractive","forbiddenElementTypes_1","forbiddenElementType","paddingRight","paddingBottom","getSelectAction","setSelectAction","isSelectable","getItemCount","getItemAt","InteractivityNotAllowed","overflowX","overflowY","concat","ImageSet","_images","flexWrap","renderedImage","margin","getFirstVisibleRenderedItem","getLastVisibleRenderedItem","itemIndex","images","image","jsonImages","addImage","MediaSource","Media","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","supportedMediaTypes","renderPoster","posterRootElement","position","posterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSource","mediaSource","InputValidationOptions","necessity","Optional","errorMessage","Input","validation","_renderedInputControlElement","_inputControlContainerElement","_outerContainerElement","flexDirection","useBuiltInInputValidation","isNullable","RequiredWithVisualCue","valueChanged","onInputValueChangedHandler","resetValidationFailureCue","onValueChanged","onInputValueChanged","_errorMessageElement","showValidationErrorMessage","displayInputValidationErrors","textContent","parseInputValue","PropertyCantBeNull","validateValue","jsonValidation","_defaultValue","TextInput","isMultiline","Text","textareaElement","placeholder","maxLength","oninput","inlineAction","inputElement","renderedInputControl","button_1","iconUrl","icon_1","removeProperty","inputControlContainerElement","_inlineAction","renderedInputControlElement","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","onchange","useMarkdownInRadioButtonAndCheckbox","labelElement","spacerElement","Choice","ChoiceSetInput","choices","isCompact","isMultiSelect","getUniqueCategoryName","uniqueCwtegoryName","uniqueCategoryCounter","defaultValues","_toggleInputs","i_2","checkboxInput","compoundInput","_selectElement","option","selected","disabled","hidden","option_1","uniqueCategoryName","i_1","radioInput","CollectionCantBeEmpty","choice","jsonChoice","selectedIndex","NumberInput","_numberInputElement","min","max","_min","_max","valueAsNumber","DateInput","_dateInputElement","ActionButtonState","TimeInput","_timeInputElement","test","ActionButton","parentContainerStyle","_state","Normal","onClick","_parentContainerStyle","updateCssStyle","Expanded","Subdued","_b","click","Action","_actionCollection","setCollection","actionCollection","addCssClasses","internalGetReferencedInputs","allInputs","internalPrepareForExecution","internalValidateInputs","ignoreInputValidation","baseCssClass","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","onExecuteActionHandler","onExecute","onExecuteAction","prepareForExecution","onParseActionHandler","onParseAction","raiseParseActionEvent","removeAction","validateInputs","SubmitAction","_isPrepared","_ignoreInputValidation","allInputs_1","_originalData","_processedData","data","OpenUrlAction","ToggleVisibilityAction","targetElements","elementId","jsonTargetElements","jsonTargetElements_1","jsonElementId","addTargetElement","removeTargetElement","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","header","method","headers","body","jsonHeader","httpHeader","InlineAdaptiveCard","jsonCard","ActionCollection","owner","_expandedAction","_renderedActionCount","_actionCard","buttons","_owner","refreshContainer","_actionCardContainer","layoutChanged","hideActionCard","previouslyExpandedAction","raiseInlineCardExpandedEvent","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","clear","json_1","jsonAction","addAction","TooManyActions","buttonStrip","ab","spacer","buttonStripContainer","expandedAction","actionIndex","ActionSet","renderedActionCount","jsonOrientation","StylableCardElementContainer","_style","_bleed","applyBackground","styleDefinition","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","hasExplicitStyle","getHasExpandedAction","getBleed","setBleed","BackgroundImage","fillMode","defaultFillMode","defaultHorizontalAlignment","verticalAlignment","defaultVerticalAlignment","reset","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","Top","_items","_renderedItems","verticalContentAlignment","rtl","insertItemAt","forceInsert","isStandalone","supportsExcplitiHeight","getItemsCollectionPropertyName","dir","placeholderElement","boundary","handleElement","elt","maxHeight_1","elements","bleed","firstRenderedItem","lastRenderedItem","jsonBackgroundImage","addItem","insertItemBefore","insertBefore","insertItemAfter","insertAfter","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","_columns","createColumnInstance","_renderedColumns","totalWeight","column","_c","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","weightedColumns","stretchedColumns","Hint","addColumn","onImageLoadedHandler","onImageLoaded","onAnchorClickedHandler","onAnchorClicked","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","onParseError","ContainerWithActions","renderedActions","renderIfEmpty","TypeRegistry","findTypeRegistration","registerType","registrationInfo","unregisterType","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","_fallbackCard","onProcessMarkdown","console","warn","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","speak","MissingCardType","UnsupportedCardVersion","langId","fallbackElement","removeAttribute","AbstractTextFormatter","regularExpression","_regularExpression","format","internalFormat","DateFormatter","date","Date","toLocaleDateString","day","weekday","month","year","TimeFormatter","toLocaleTimeString","hour","minute","formatters"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AdaptiveCards\"] = factory();\n\telse\n\t\troot[\"AdaptiveCards\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// Note the \"weird\" way these readonly fields are declared is to work around\r\n// a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n// and adopt this syntax for all other static readonly fields.\r\nexport class ActionStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Positive: \"positive\" = \"positive\";\r\n    static readonly Destructive: \"destructive\" = \"destructive\";\r\n}\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\nexport enum InputValidationNecessity {\r\n    Optional,\r\n    Required,\r\n    RequiredWithVisualCue\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n\r\n    Also note the \"weird\" way these readonly fields are declared is to work around\r\n    a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    and adopt this syntax for all other static readonly fields.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Emphasis: \"emphasis\" = \"emphasis\";\r\n    static readonly Accent: \"accent\" = \"accent\";\r\n    static readonly Good: \"good\" = \"good\";\r\n    static readonly Attention: \"attention\" = \"attention\";\r\n    static readonly Warning: \"warning\" = \"warning\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n\t\tlet regExp = /^([0-9]+)(px|\\*)?$/g;\r\n\t\tlet matches = regExp.exec(input);\r\n\t\tlet expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n\t\tif (matches && matches.length >= expectedMatchCount) {\r\n\t\t\tresult.physicalSize = parseInt(matches[1]);\r\n\r\n\t\t\tif (matches.length == 3) {\r\n\t\t\t\tif (matches[2] == \"px\") {\r\n\t\t\t\t\tresult.unit = Enums.SizeUnit.Pixel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return typeof obj === \"string\" ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getNumberValue(obj: any, defaultValue: number = undefined): number {\r\n    return typeof obj === \"number\" ? obj : defaultValue;\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function setProperty(target: object, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setNumberProperty(target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function setArrayProperty(target: object, propertyName: string, propertyValue: any[]) {\r\n    let items = [];\r\n\r\n    if (propertyValue) {\r\n        for (let item of propertyValue) {\r\n            items.push(item.toJSON());\r\n        }\r\n    }\r\n\r\n    if (items.length == 0) {\r\n        if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        setProperty(target, propertyName, items);\r\n    }\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return value;\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getNumberValue(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getBoolValue(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n    private _label: string;\r\n\r\n    constructor(major: number = 1, minor: number = 1, label?: string) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label ? this._label : this.toString();\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n    alwaysAllowBleed: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nenum InstanceCreationErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nfunction createCardObjectInstance<T extends CardObject>(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenTypeNames: string[],\r\n    allowFallback: boolean,\r\n    createInstanceCallback: (typeName: string) => T,\r\n    createValidationErrorCallback: (typeName: string, errorType: InstanceCreationErrorType) => HostConfig.IValidationError,\r\n    errors: Array<HostConfig.IValidationError>): T {\r\n    let result: T = null;\r\n\r\n    if (json && typeof json === \"object\") {\r\n        let tryToFallback = false;\r\n\t\tlet typeName = Utils.getStringValue(json[\"type\"]);\r\n\r\n        if (forbiddenTypeNames && forbiddenTypeNames.indexOf(typeName) >= 0) {\r\n            raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.ForbiddenType), errors);\r\n        }\r\n        else {\r\n            result = createInstanceCallback(typeName);\r\n\r\n            if (!result) {\r\n                tryToFallback = allowFallback;\r\n\r\n                raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.UnknownType), errors);\r\n            }\r\n            else {\r\n                result.setParent(parent);\r\n                result.parse(json, errors);\r\n\r\n                tryToFallback = result.shouldFallback() && allowFallback;\r\n            }\r\n\r\n            if (tryToFallback) {\r\n                let fallback = json[\"fallback\"];\r\n\r\n                if (!fallback) {\r\n                    parent.setShouldFallback(true);\r\n                }\r\n                if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                    result = null;\r\n                }\r\n                else if (typeof fallback === \"object\") {\r\n                    result = createCardObjectInstance<T>(\r\n                        parent,\r\n                        fallback,\r\n                        forbiddenTypeNames,\r\n                        true,\r\n                        createInstanceCallback,\r\n                        createValidationErrorCallback,\r\n                        errors);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function createActionInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenActionTypes: string[],\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): Action {\r\n    return createCardObjectInstance<Action>(\r\n        parent,\r\n        json,\r\n        forbiddenActionTypes,\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.actionTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownActionType,\r\n                    message: \"Unknown action type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Action type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport function createElementInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): CardElement {\r\n    return createCardObjectInstance<CardElement>(\r\n        parent,\r\n        json,\r\n        [], // Forbidden types not supported for elements for now\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.elementTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownElementType,\r\n                    message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                    message: \"Element type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport abstract class SerializableObject {\r\n    private _rawProperties = {};\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._rawProperties = AdaptiveCard.enableFullJsonRoundTrip ? json : {};\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result: any;\r\n\r\n        if (AdaptiveCard.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n            result = this._rawProperties;\r\n        }\r\n        else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        let shouldDeleteProperty = (typeof value === \"string\" && Utils.isNullOrEmpty(value)) || value === undefined || value === null;\r\n\r\n        if (shouldDeleteProperty) {\r\n            delete this._rawProperties[name];\r\n        }\r\n        else {\r\n            this._rawProperties[name] = value;\r\n        }\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n}\r\n\r\nexport class ValidationFailure {\r\n    readonly errors: HostConfig.IValidationError[] = [];\r\n\r\n    constructor(readonly cardObject: CardObject) { }\r\n}\r\n\r\nexport class ValidationResults {\r\n    private getFailureIndex(cardObject: CardObject) {\r\n        for (let i = 0; i < this.failures.length; i++) {\r\n            if (this.failures[i].cardObject === cardObject) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    readonly allIds: Shared.Dictionary<number> = {};\r\n    readonly failures: ValidationFailure[] = [];\r\n\r\n    addFailure(cardObject: CardObject, error: HostConfig.IValidationError) {\r\n        let index = this.getFailureIndex(cardObject);\r\n        let failure: ValidationFailure;\r\n\r\n        if (index < 0) {\r\n            failure = new ValidationFailure(cardObject);\r\n\r\n            this.failures.push(failure);\r\n        }\r\n        else {\r\n            failure = this.failures[index];\r\n        }\r\n\r\n        failure.errors.push(error);\r\n    }\r\n}\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    abstract getJsonTypeName(): string;\r\n    abstract shouldFallback(): boolean;\r\n    abstract setParent(parent: CardElement);\r\n\r\n    id: string;\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (!Utils.isNullOrEmpty(this.id)) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] == 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.DuplicateId,\r\n                            message: \"Duplicate Id: \" + this.id\r\n                        });\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            }\r\n            else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        let result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: Shared.PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        let renderedSeparator = Utils.renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n\r\n            if (AdaptiveCard.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                // Adjust separator's margins if the option to always bleed separators is turned on\r\n                let parentContainer = this.getParentContainer();\r\n    \r\n                if (parentContainer && parentContainer.getEffectivePadding()) {\r\n                    let parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\r\n    \r\n                    renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\r\n                    renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\r\n                }\r\n            }\r\n    \r\n            return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = displayMode;\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = displayMode;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement) {\r\n            if (AdaptiveCard.alwaysBleedSeparators && this.separatorOrientation == Enums.Orientation.Horizontal && !this.isBleeding()) {\r\n                let padding = new Shared.PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            }\r\n            else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): Shared.PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: Shared.PaddingDefinition) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    customCssSelector: string = null;\r\n    height: CardElementHeight = \"auto\";\r\n    minPixelHeight?: number = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    asString(): string {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n\ttoJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"isVisible\", this.isVisible, true);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        if (this.supportsMinHeight) {\r\n            Utils.setProperty(result, \"minHeight\", typeof this.minPixelHeight === \"number\" && !isNaN(this.minPixelHeight) ? this.minPixelHeight + \"px\" : undefined);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: Shared.PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            let effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n        this.isVisible = Utils.getBoolValue(json[\"isVisible\"], this.isVisible);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n\r\n        this.spacing = Utils.getEnumValue(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = Utils.getBoolValue(json[\"separator\"], this.separator);\r\n\r\n        let jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n\r\n        if (this.supportsMinHeight) {\r\n            let jsonMinHeight = json[\"minHeight\"];\r\n\r\n            if (jsonMinHeight && typeof jsonMinHeight === \"string\") {\r\n                let isValid = false;\r\n\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(jsonMinHeight, true);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        this.minPixelHeight = size.physicalSize;\r\n\r\n                        isValid = true;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Do nothing. A parse error is emitted below\r\n                }\r\n\r\n                if (!isValid) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.InvalidPropertyValue,\r\n                            message: \"Invalid \\\"minHeight\\\" value: \" + jsonMinHeight\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.minPixelHeight = null;\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    getEffectivePadding(): Shared.PaddingDefinition {\r\n        let padding = this.getPadding();\r\n\r\n        return (padding && this.allowCustomPadding) ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    private _text: string;\r\n    private _selectAction: Action = null;\r\n\r\n    protected getEffectiveStyleDefinition() {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    protected getFontSize(fontType: HostConfig.FontTypeDefinition): number {\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(colorSet: HostConfig.ColorSetDefinition, color: Enums.TextColor): HostConfig.TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    fontType?: Enums.FontType = null;\r\n\r\n    asString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setEnumProperty(Enums.FontType, result, \"fontType\", this.fontType, Enums.FontType.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        let fontType = this.hostConfig.getFontTypeDefinition(this.fontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = Utils.getStringValue(json[\"text\"]);\r\n\r\n        let sizeString = Utils.getStringValue(json[\"size\"]);\r\n\r\n        if (sizeString && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValue(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        let weightString = Utils.getStringValue(json[\"weight\"]);\r\n\r\n        if (weightString && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValue(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValue(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = Utils.getBoolValue(json[\"isSubtle\"], this.isSubtle);\r\n        this.fontType = Utils.getEnumValue(Enums.FontType, json[\"fontType\"], this.fontType);\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color ? this.color : Enums.TextColor.Default;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.setText(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText: string = null;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = null;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._processedText = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                if (hostConfig.supportsInteractivity) {\r\n                    element.tabIndex = 0\r\n                    element.setAttribute(\"role\", \"button\");\r\n                    element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                if (this.useMarkdown) {\r\n                    if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==\");\r\n                    }\r\n\r\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                            let markStyle: string = \"\";\r\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (!Utils.isNullOrEmpty(markStyle)) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==/g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            }\r\n            else {\r\n                element.innerHTML = this._processedText;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                let firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            let anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (let i = 0; i < anchors.length; i++) {\r\n                let anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setNumberProperty(result, \"maxLines\", this.maxLines);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        let parentContainer = this.getParentContainer();\r\n        let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                break;\r\n        }\r\n\r\n        let lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n        this.maxLines = Utils.getNumberValue(json[\"maxLines\"]);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                let anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.href = this.selectAction.getHref();\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            }\r\n            else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    italic: boolean = false;\r\n    strikethrough: boolean = false;\r\n    highlight: boolean = false;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n            targetElement.style.backgroundColor = Utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"italic\", this.italic, false);\r\n        Utils.setProperty(result, \"strikethrough\", this.strikethrough, false);\r\n        Utils.setProperty(result, \"highlight\", this.highlight, false);\r\n\r\n        if (this.selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.italic = Utils.getBoolValue(json[\"italic\"], this.italic);\r\n        this.strikethrough = Utils.getBoolValue(json[\"strikethrough\"], this.strikethrough);\r\n        this.highlight = Utils.getBoolValue(json[\"highlight\"], this.highlight);\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\");\r\n        }\r\n\r\n        let doAdd: boolean = inline.parent == null || forceAdd;\r\n\r\n        if (!doAdd && inline.parent != this) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\");\r\n        }\r\n        else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._inlines.length > 0) {\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            let parentContainer = this.getParentContainer();\r\n            let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                    break;\r\n            }\r\n\r\n            for (let inline of this._inlines) {\r\n                element.appendChild(inline.render());\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    asString(): string {\r\n        let result = \"\";\r\n\r\n        for (let inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(json[\"inlines\"])) {\r\n            for (let jsonInline of json[\"inlines\"]) {\r\n                let inline: CardElement;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    let textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                }\r\n                else {\r\n                    inline = createElementInstance(\r\n                        this,\r\n                        jsonInline,\r\n                        false, // No fallback for inlines in 1.2\r\n                        errors);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._inlines.length > 0) {\r\n            let jsonInlines: any[] = [];\r\n\r\n            for (let inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"inlines\", jsonInlines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        }\r\n        else {\r\n            throw new Error(\"RichTextBlock.getInlineAt: Index out of range (\" + index + \")\");\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement) {\r\n        this.internalAddInline(inline);\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        let index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(null);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact extends SerializableObject {\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.name);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                let trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setArrayProperty(result, \"facts\", this.facts);\r\n\r\n        /*\r\n        let facts = [];\r\n\r\n\t\tif (this.facts) {\r\n\t\t\tfor (let fact of this.facts) {\r\n\t\t\t\tfacts.push(fact.toJSON());\r\n\t\t\t}\r\n\t\t}\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n        */\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n\t\tlet jsonFacts = json[\"facts\"];\r\n\r\n\t\tif (Array.isArray(jsonFacts)) {\r\n\t\t\tfor (let jsonFact of jsonFacts) {\r\n\t\t\t\tlet fact = new Fact();\r\n\t\t\t\tfact.parse(jsonFact);\r\n\r\n\t\t\t\tthis.facts.push(fact);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<HostConfig.IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) { // enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Shared.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.backgroundColor = Utils.getStringValue(json[\"backgroundColor\"]);\r\n\r\n        let styleString = Utils.getStringValue(json[\"style\"]);\r\n\r\n        if (styleString && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValue(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValue(Enums.Size, json[\"size\"], this.size);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    private _selectAction: Action = null;\r\n\r\n    protected isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (let forbiddenElementType of forbiddenElementTypes) {\r\n                if (element.getJsonTypeName() === forbiddenElementType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected getSelectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    protected setSelectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement;\r\n    abstract getLastVisibleRenderedItem(): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    allowVerticalOverflow: boolean = false;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (this.isSelectable) {\r\n            this._selectAction = createActionInstance(\r\n                this,\r\n                json[\"selectAction\"],\r\n                [ShowCardAction.JsonTypeName],\r\n                !this.isDesignMode(),\r\n                errors);\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction && this.isSelectable) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            let item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(item, this.getForbiddenElementTypes())) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + item.getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let element = super.render();\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.allowVerticalOverflow) {\r\n            element.style.overflowX = \"hidden\";\r\n            element.style.overflowY = \"auto\";\r\n        }\r\n\r\n        if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this._selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this._selectAction != null) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this._selectAction != null && (e.keyCode == 13 || e.keyCode == 32)) {\r\n                    // Enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[0] : null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : null;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValue(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport class MediaSource extends SerializableObject {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        super();\r\n\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.mimeType = Utils.getStringValue(json[\"mimeType\"]);\r\n\t\tthis.url = Utils.getStringValue(json[\"url\"]);\r\n\t}\r\n\r\n\ttoJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"mimeType\", this.mimeType);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (let source of this.sources) {\r\n            let mimeComponents = source.mimeType ? source.mimeType.split('/') : [];\r\n\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.poster = Utils.getStringValue(json[\"poster\"]);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        this.sources = [];\r\n\r\n        if (Array.isArray(json[\"sources\"])) {\r\n            for (let jsonSource of json[\"sources\"]) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSource, errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        /*\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"sources\", this.sources);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport class InputValidationOptions extends SerializableObject {\r\n    necessity: Enums.InputValidationNecessity = Enums.InputValidationNecessity.Optional;\r\n    errorMessage: string = undefined;\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.necessity = Utils.getEnumValue(Enums.InputValidationNecessity, json[\"necessity\"], this.necessity);\r\n        this.errorMessage = Utils.getStringValue(json[\"errorMessage\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.necessity != Enums.InputValidationNecessity.Optional || !Utils.isNullOrEmpty(this.errorMessage)) {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setEnumProperty(Enums.InputValidationNecessity, result, \"necessity\", this.necessity, Enums.InputValidationNecessity.Optional);\r\n            Utils.setProperty(result, \"errorMessage\", this.errorMessage);\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Shared.IInput {\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _errorMessageElement: HTMLElement;\r\n    private _renderedInputControlElement: HTMLElement;\r\n    private _defaultValue: string;\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n        this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.isNullable && this.validation.necessity == Enums.InputValidationNecessity.RequiredWithVisualCue) {\r\n            this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\r\n        }\r\n\r\n        this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n\r\n        this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n        return this._outerContainerElement;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.resetValidationFailureCue();\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.renderedElement) {\r\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n            if (this._errorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._errorMessageElement);\r\n\r\n                this._errorMessageElement = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (this.renderedElement && AdaptiveCard.useBuiltInInputValidation && AdaptiveCard.displayInputValidationErrors && !Utils.isNullOrEmpty(this.validation.errorMessage)) {\r\n            this._errorMessageElement = document.createElement(\"span\");\r\n            this._errorMessageElement.className = this.hostConfig.makeCssClassName(\"ac-input-validation-error-message\");\r\n            this._errorMessageElement.textContent = this.validation.errorMessage;\r\n\r\n            this._outerContainerElement.appendChild(this._errorMessageElement);\r\n        }\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    readonly validation = new InputValidationOptions();\r\n\r\n    title: string;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement && !Utils.isNullOrEmpty(this.value) ? this.value : this.defaultValue);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            Utils.setProperty(result, \"validation\", this.validation.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.id)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"All inputs must have a unique Id\"\r\n                });\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            this.resetValidationFailureCue();\r\n\r\n            let result = this.validation.necessity != Enums.InputValidationNecessity.Optional ? !Utils.isNullOrEmpty(this.value) : true;\r\n\r\n            if (!result && this.renderedElement) {\r\n                this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n                this.showValidationErrorMessage();\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n        this.defaultValue = Utils.getStringValue(json[\"value\"]);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            let jsonValidation = json[\"validation\"];\r\n\r\n            if (jsonValidation) {\r\n                this.validation.parse(jsonValidation);\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get defaultValue(): string {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    set defaultValue(value: string) {\r\n        this._defaultValue = this.parseInputValue(value);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _inlineAction: Action;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            let textareaElement = document.createElement(\"textarea\");\r\n            textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            textareaElement.style.flex = \"1 1 auto\";\r\n            textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                textareaElement.placeholder = this.placeholder;\r\n                textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength && this.maxLength > 0) {\r\n                textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            textareaElement.oninput = () => { this.valueChanged(); }\r\n            textareaElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Ctrl+Enter pressed\r\n                if (e.keyCode == 10 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return textareaElement;\r\n        }\r\n        else {\r\n            let inputElement = document.createElement(\"input\");\r\n            inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            inputElement.style.flex = \"1 1 auto\";\r\n            inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                inputElement.placeholder = this.placeholder;\r\n                inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength && this.maxLength > 0) {\r\n                inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            inputElement.oninput = () => { this.valueChanged(); }\r\n            inputElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Enter pressed\r\n                if (e.keyCode == 13 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return inputElement;\r\n        }\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            let button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\"ac-inlineActionButton\");\r\n            button.onclick = (e) => {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.inlineAction.execute();\r\n            };\r\n\r\n            if (!Utils.isNullOrEmpty(this.inlineAction.iconUrl)) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                let icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n                }\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n\r\n                if (!Utils.isNullOrEmpty(this.inlineAction.title)) {\r\n                    button.title = this.inlineAction.title;\r\n                }\r\n            }\r\n            else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n            }\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean = false;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setNumberProperty(result, \"maxLength\", this.maxLength);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        if (this._inlineAction) {\r\n            Utils.setProperty(result, \"inlineAction\", this._inlineAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = Utils.getNumberValue(json[\"maxLength\"]);\r\n        this.isMultiline = Utils.getBoolValue(json[\"isMultiline\"], this.isMultiline);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.style = Utils.getEnumValue(Enums.InputTextStyle, json[\"style\"], this.style);\r\n        this.inlineAction = createActionInstance(\r\n            this,\r\n            json[\"inlineAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    get inlineAction(): Action {\r\n        return this._inlineAction;\r\n    }\r\n\r\n    set inlineAction(value: Action) {\r\n        this._inlineAction = value;\r\n\r\n        if (this._inlineAction) {\r\n            this._inlineAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            }\r\n            else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            let label = new Label();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            let labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            let spacerElement = document.createElement(\"div\");\r\n            spacerElement.style.width = \"6px\";\r\n\r\n            Utils.appendChild(element, spacerElement);\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        Utils.setProperty(result, \"wrap\", this.wrap);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.valueOn = Utils.getStringValue(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getStringValue(json[\"valueOff\"], this.valueOff);\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice extends SerializableObject {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"], \"\");\r\n        this.value = Utils.getStringValue(json[\"value\"], \"\");\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                let option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                let element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-expanded\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (let i = 0; i < this.choices.length; i++) {\r\n                    let radioInput = document.createElement(\"input\");\r\n                    radioInput.id = Utils.generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    let label = new Label();\r\n                    label.setParent(this);\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    label.wrap = this.wrap;\r\n\r\n                    let labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    let spacerElement = document.createElement(\"div\");\r\n                    spacerElement.style.width = \"6px\";\r\n\r\n                    let compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    compoundInput.style.alignItems = \"center\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, spacerElement);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            let defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-multiSelect\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (let i = 0; i < this.choices.length; i++) {\r\n                let checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = Utils.generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                let label = new Label();\r\n                label.setParent(this);\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                label.wrap = this.wrap;\r\n\r\n                let labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                let spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                let compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean = false;\r\n    isMultiSelect: boolean = false;\r\n    placeholder: string;\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        /*\r\n        let choices = [];\r\n\r\n        if (this.choices) {\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n        }\r\n\r\n        Utils.setProperty(result, \"choices\", choices);\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"choices\", this.choices);\r\n\r\n        Utils.setProperty(result, \"style\", this.isCompact ? null : \"expanded\");\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length == 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.CollectionCantBeEmpty,\r\n                    message: \"An Input.ChoiceSet must have at least one choice defined.\"\r\n                });\r\n        }\r\n\r\n        for (let choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.PropertyCantBeNull,\r\n                        message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\"\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = Utils.getBoolValue(json[\"isMultiSelect\"], this.isMultiSelect);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n\r\n        this.choices = [];\r\n\r\n        if (Array.isArray(json[\"choices\"])) {\r\n            for (let jsonChoice of json[\"choices\"]) {\r\n                let choice = new Choice();\r\n                choice.parse(jsonChoice);\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                if (this._selectElement) {\r\n                    return this._selectElement.selectedIndex > 0 ? this._selectElement.value : null;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n    private _min: number;\r\n    private _max: number;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n\r\n        if (this.min) {\r\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\r\n        }\r\n\r\n        if (this.max) {\r\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\r\n        }\r\n\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setNumberProperty(result, \"min\", this.min);\r\n        Utils.setNumberProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.min = Utils.getNumberValue(json[\"min\"]);\r\n        this.max = Utils.getNumberValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this._min = value;\r\n    }\r\n\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this._max = value;\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : undefined;\r\n    }\r\n\r\n    get valueAsNumber(): number {\r\n        return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.setAttribute(\"min\", this.min);\r\n        this._dateInputElement.setAttribute(\"max\", this.max);\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.setAttribute(\"min\", this.min);\r\n        this._timeInputElement.setAttribute(\"max\", this.max);\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        if (/^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        if (!Utils.isNullOrEmpty(this._parentContainerStyle)) {\r\n            this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        }\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.action.style)) {\r\n            if (this.action.style === Enums.ActionStyle.Positive) {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\r\n            }\r\n            else {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.action.style.toLowerCase()));\r\n             }\r\n        }\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render() {\r\n        this.action.render();\r\n        this.action.renderedElement.onclick = (e) => {\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n\r\n            this.click();\r\n        };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Shared.Dictionary<Input>): Array<Input> {\r\n        let result: Input[] = [];\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && !this.ignoreInputValidation) {\r\n            for (let key of Object.keys(referencedInputs)) {\r\n                let input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    title: string;\r\n    iconUrl: string;\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getHref(): string {\r\n        return \"\";\r\n    }\r\n\r\n    toJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        Utils.setProperty(result, \"style\", this.style, Enums.ActionStyle.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    render(baseCssClass: string = \"ac-pushButton\") {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        let buttonElement = document.createElement(\"button\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (this.internalValidateInputs(referencedInputs).length > 0) {\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    };\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.iconUrl = Utils.getStringValue(json[\"iconUrl\"]);\r\n        this.style = Utils.getStringValue(json[\"style\"], this.style);\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getReferencedInputs(): Shared.Dictionary<Input> {\r\n        return this.internalGetReferencedInputs(this.parent.getRootElement().getAllInputs());\r\n    }\r\n\r\n    validateInputs() {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.parent.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style == Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        }\r\n        else {\r\n            if (this.style == Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Submit\" = \"Action.Submit\";\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        for (let input of allInputs) {\r\n            result[input.id] = input;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (let key of Object.keys(inputs)) {\r\n            let input = inputs[key];\r\n\r\n            if (input.value != null) {\r\n                this._processedData[input.id] = input.value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.OpenUrl\" = \"Action.OpenUrl\";\r\n\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.OpenUrl must have its url property set.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    getHref(): string {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ToggleVisibility\" = \"Action.ToggleVisibility\";\r\n\r\n    targetElements = {}\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        for (let elementId of Object.keys(this.targetElements)) {\r\n            let targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n            if (targetElement) {\r\n                if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                    targetElement.isVisible = this.targetElements[elementId];\r\n                }\r\n                else {\r\n                    targetElement.isVisible = !targetElement.isVisible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.targetElements = {};\r\n\r\n        let jsonTargetElements = json[\"targetElements\"];\r\n\r\n        if (jsonTargetElements && Array.isArray(jsonTargetElements)) {\r\n            for (let item of jsonTargetElements) {\r\n                if (typeof item === \"string\") {\r\n                    this.targetElements[item] = undefined;\r\n                }\r\n                else if (typeof item === \"object\") {\r\n                    let jsonElementId = item[\"elementId\"];\r\n\r\n                    if (jsonElementId && typeof jsonElementId === \"string\") {\r\n                        this.targetElements[jsonElementId] = Utils.getBoolValue(item[\"isVisible\"], undefined);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let targetElements: any[] = [];\r\n\r\n        for (let id of Object.keys(this.targetElements)) {\r\n            if (typeof this.targetElements[id] === \"boolean\") {\r\n                targetElements.push(\r\n                    {\r\n                        elementId: id,\r\n                        isVisible: this.targetElements[id]\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                targetElements.push(id);\r\n            }\r\n        }\r\n\r\n        result[\"targetElements\"] = targetElements;\r\n\r\n        return result;\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n    }\r\n\r\n    removeTargetElement(elementId) {\r\n        delete this.targetElements[elementId];\r\n    }\r\n}\r\n\r\nexport class HttpHeader extends SerializableObject {\r\n    private _value = new Shared.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"name\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"name\", this.name);\r\n        Utils.setProperty(result, \"value\", this._value.getOriginal());\r\n\r\n        return result;\r\n    }\r\n\r\n    getReferencedInputs(inputs: Array<Input>, referencedInputs: Shared.Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Http\" = \"Action.Http\";\r\n\r\n    private _url = new Shared.StringWithSubstitutions();\r\n    private _body = new Shared.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (let header of this._headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._url.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Shared.ContentTypes.applicationJson;\r\n\r\n        for (let header of this._headers) {\r\n            header.prepareForExecution(inputs);\r\n\r\n            if (header.name && header.name.toLowerCase() == \"content-type\") {\r\n                contentType = header.value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setArrayProperty(result, \"headers\", this.headers);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.Http must have its url property set.\"\r\n                });\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (let header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.PropertyCantBeNull,\r\n                            message: \"All headers of an Action.Http must have their name and value properties set.\"\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.method = Utils.getStringValue(json[\"method\"]);\r\n        this.body = Utils.getStringValue(json[\"body\"]);\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n\r\n        this._headers = [];\r\n\r\n        if (Array.isArray(json[\"headers\"])) {\r\n            for (let jsonHeader of json[\"headers\"]) {\r\n                let httpHeader = new HttpHeader();\r\n                httpHeader.parse(jsonHeader);\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ShowCard\" = \"Action.ShowCard\";\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        let jsonCard = json[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, errors);\r\n        }\r\n        else {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        let padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.clear();\r\n\r\n        if (json && json instanceof Array) {\r\n            for (let jsonAction of json) {\r\n                let action = createActionInstance(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    [],\r\n                    !this._owner.isDesignMode(),\r\n                    errors);\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (let item of this.items) {\r\n            if (!isActionAllowed(item, this._owner.getForbiddenActionTypes())) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + item.getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        // Cache hostConfig for better perf\r\n        let hostConfig = this._owner.hostConfig;\r\n\r\n        if (!hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = hostConfig.actions.maxActions ? Math.min(hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().getEffectiveStyle();\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render();\r\n\r\n                    if (hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal && hostConfig.actions.actionAlignment == Enums.ActionAlignment.Stretch) {\r\n                        actionButton.action.renderedElement.style.flex = \"0 1 100%\";\r\n                    }\r\n                    else {\r\n                        actionButton.action.renderedElement.style.flex = \"0 1 auto\";\r\n                    }\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValue(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    private _style?: string = null;\r\n    private _bleed: boolean = false;\r\n\r\n    protected applyBackground() {\r\n        let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n        if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n            this.renderedElement.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            let padding = new Shared.PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (this.separatorElement) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        let currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return this.getHasBackground() ?\r\n            new Shared.PaddingDefinition(\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding) : super.getDefaultPadding();\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n\t\treturn (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"style\", this.style);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._style) {\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._style = Utils.getStringValue(json[\"style\"]);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        let effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage extends SerializableObject {\r\n    private static readonly defaultFillMode = Enums.FillMode.Cover;\r\n    private static readonly defaultHorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    private static readonly defaultVerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    url: string;\r\n    fillMode: Enums.FillMode = BackgroundImage.defaultFillMode;\r\n    horizontalAlignment: Enums.HorizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n    verticalAlignment: Enums.VerticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n\r\n    reset() {\r\n        this.url = undefined;\r\n        this.fillMode = BackgroundImage.defaultFillMode;\r\n        this.horizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n        this.verticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.fillMode = Utils.getEnumValue(Enums.FillMode, json[\"fillMode\"], this.fillMode);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (!this.isValid()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.fillMode == BackgroundImage.defaultFillMode &&\r\n            this.horizontalAlignment == BackgroundImage.defaultHorizontalAlignment &&\r\n            this.verticalAlignment == BackgroundImage.defaultVerticalAlignment) {\r\n\r\n            return this.url;\r\n        }\r\n        else {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setProperty(result, \"url\", this.url);\r\n            Utils.setEnumProperty(Enums.FillMode, result, \"fillMode\", this.fillMode, BackgroundImage.defaultFillMode);\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment, BackgroundImage.defaultHorizontalAlignment);\r\n            Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalAlignment\", this.verticalAlignment, BackgroundImage.defaultVerticalAlignment);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return !Utils.isNullOrEmpty(this.url);\r\n    }\r\n}\r\n\r\nexport class Container extends StylableCardElementContainer {\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n\r\n    private insertItemAt(\r\n        item: CardElement,\r\n        index: number,\r\n        forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    protected supportsExcplitiHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid()) {\r\n            this.backgroundImage.apply(this.renderedElement);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        if (this.rtl != null && this.rtl) {\r\n            element.dir = \"rtl\";\r\n        }\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return this.backgroundImage.isValid() || super.getHasBackground();\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    readonly backgroundImage: BackgroundImage = new BackgroundImage();\r\n\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n    rtl?: boolean = null;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.toJSON());\r\n\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl != null) {\r\n            return this.rtl;\r\n        }\r\n        else {\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.setShouldFallback(false);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        this.backgroundImage.reset();\r\n\r\n        let jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.fillMode = Enums.FillMode.Cover;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage.parse(jsonBackgroundImage, errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            let items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let element = createElementInstance(\r\n                    this,\r\n                    items[i],\r\n                    !this.isDesignMode(),\r\n                    errors);\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Shared.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <Shared.SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof Shared.SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        if (jsonWidth) {\r\n            var invalidWidth = false;\r\n\r\n            try {\r\n                this.width = Shared.SizeAndUnit.parse(jsonWidth);\r\n            }\r\n            catch (e) {\r\n                if (typeof jsonWidth === \"string\" && (jsonWidth === \"auto\" || jsonWidth === \"stretch\")) {\r\n                    this.width = jsonWidth;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n\r\n            if (invalidWidth) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Invalid column width:\" + jsonWidth + \" - defaulting to \\\"auto\\\"\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends StylableCardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _renderedColumns: Array<Column>;\r\n\r\n    private createColumnInstance(json: any, errors: Array<HostConfig.IValidationError>): Column {\r\n        return createCardObjectInstance<Column>(\r\n            this,\r\n            json,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : null;\r\n            },\r\n            (typeName: string, errorType: InstanceCreationErrorType) => {\r\n                if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                    return {\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                        message: \"Element type \" + typeName + \" isn't allowed in a ColumnSet.\"\r\n                    }\r\n                }\r\n            },\r\n            errors);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                let renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                let column = this.createColumnInstance(jsonColumns[i], errors);\r\n\r\n                this._columns.push(column);\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (let column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        if (action.prepareForExecution()) {\r\n            onExecuteActionHandler(action);\r\n        }\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    let card = input.getRootElement() as AdaptiveCard;\r\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: HostConfig.IValidationError, errors: Array<HostConfig.IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    this.hostConfig,\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        if (this.renderIfEmpty) {\r\n            return element;\r\n        }\r\n        else {\r\n            return element.children.length > 0 ? element : null;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount == 0) {\r\n            return false;\r\n        }\r\n        else if (this.renderedActionCount == 1) {\r\n            return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n        }\r\n        else {\r\n            return this._actionCollection.expandedAction != null;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"RichTextBlock\", () => { return new RichTextBlock(); });\r\n        this.registerType(\"TextRun\", () => { return new TextRun(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"ActionSet\", () => { return new ActionSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(OpenUrlAction.JsonTypeName, () => { return new OpenUrlAction(); });\r\n        this.registerType(SubmitAction.JsonTypeName, () => { return new SubmitAction(); });\r\n        this.registerType(ShowCardAction.JsonTypeName, () => { return new ShowCardAction(); });\r\n        this.registerType(ToggleVisibilityAction.JsonTypeName, () => { return new ToggleVisibilityAction(); });\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: HostConfig.Version = new HostConfig.Version(1, 2);\r\n\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static useBuiltInInputValidation: boolean = true;\r\n    static displayInputValidationErrors: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onInputValueChanged: (input: Input) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseError: (error: HostConfig.IValidationError) => void = null;\r\n    static onProcessMarkdown: (text: string, result: IMarkdownProcessingResult) => void = null;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static set processMarkdown(value: (text: string) => string) {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        let result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        }\r\n        else if (window[\"markdownit\"]) {\r\n            // Check for markdownit\r\n            result.outputHtml = window[\"markdownit\"]().render(text);\r\n            result.didProcess = true;\r\n        }\r\n        else {\r\n            console.warn(\"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\")\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n    private _fallbackCard: AdaptiveCard = null;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            let unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onInputValueChanged: (input: Input) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n\r\n    version?: HostConfig.Version = new HostConfig.Version(1, 0);\r\n    fallbackText: string;\r\n    speak: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"The version property must be specified.\"\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._fallbackCard = null;\r\n\r\n        this._cardTypeName = Utils.getStringValue(json[\"type\"]);\r\n        this.speak = Utils.getStringValue(json[\"speak\"]);\r\n\r\n\t\tvar langId = Utils.getStringValue(json[\"lang\"]);\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = HostConfig.Version.parse(json[\"version\"], errors);\r\n\r\n        this.fallbackText = Utils.getStringValue(json[\"fallbackText\"]);\r\n\r\n        let fallbackElement = createElementInstance(\r\n            null,\r\n            json[\"fallback\"],\r\n            !this.isDesignMode(),\r\n            errors);\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        let renderedCard: HTMLElement;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontTypes: {\r\n            default: {\r\n                fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            },\r\n            monospace: {\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            }\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            accent: {\r\n                backgroundColor: \"#C7DEF9\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            good: {\r\n                backgroundColor: \"#CCFFCC\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            attention: {\r\n                backgroundColor: \"#FFC5B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            warning: {\r\n                backgroundColor: \"#FFE2B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n"],"sourceRoot":""}