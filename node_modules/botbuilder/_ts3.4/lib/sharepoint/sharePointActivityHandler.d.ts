/**
 * @module botbuilder
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { ActivityHandler, InvokeResponse, AceRequest, TurnContext, CardViewResponse, QuickViewResponse, GetPropertyPaneConfigurationResponse, SetPropertyPaneConfigurationResponse, HandleActionResponse } from 'botbuilder-core';
/**
 * The SharePointActivityHandler is derived from ActivityHandler. It adds support for
 * the SharePoint specific events and interactions
 */
export declare class SharePointActivityHandler extends ActivityHandler {
    /**
     * Invoked when an invoke activity is received from the connector.
     * Invoke activities can be used to communicate many different things.
     * * Invoke activities communicate programmatic commands from a client or channel to a bot.
     *
     * @param context A strongly-typed context object for this turn
     * @returns A task that represents the work queued to execute
     */
    protected onInvokeActivity(context: TurnContext): Promise<InvokeResponse>;
    /**
     * Override this in a derived class to provide logic for when a card view is fetched
     *
     * @param _context - A strongly-typed context object for this turn
     * @param _aceRequest - The Ace invoke request value payload
     * @returns A Card View Response for the request
     */
    protected onSharePointTaskGetCardViewAsync(_context: TurnContext, _aceRequest: AceRequest): Promise<CardViewResponse>;
    /**
     * Override this in a derived class to provide logic for when a quick view is fetched
     *
     * @param _context - A strongly-typed context object for this turn
     * @param _aceRequest - The Ace invoke request value payload
     * @returns A Quick View Response for the request
     */
    protected onSharePointTaskGetQuickViewAsync(_context: TurnContext, _aceRequest: AceRequest): Promise<QuickViewResponse>;
    /**
     * Override this in a derived class to provide logic for getting configuration pane properties.
     *
     * @param _context - A strongly-typed context object for this turn
     * @param _aceRequest - The Ace invoke request value payload
     * @returns A Property Pane Configuration Response for the request
     */
    protected onSharePointTaskGetPropertyPaneConfigurationAsync(_context: TurnContext, _aceRequest: AceRequest): Promise<GetPropertyPaneConfigurationResponse>;
    /**
     * Override this in a derived class to provide logic for setting configuration pane properties.
     *
     * @param _context - A strongly-typed context object for this turn
     * @param _aceRequest - The Ace invoke request value payload
     * @returns A Card view or no-op action response
     */
    protected onSharePointTaskSetPropertyPaneConfigurationAsync(_context: TurnContext, _aceRequest: AceRequest): Promise<SetPropertyPaneConfigurationResponse>;
    /**
     * Override this in a derived class to provide logic for setting configuration pane properties.
     *
     * @param _context - A strongly-typed context object for this turn
     * @param _aceRequest - The Ace invoke request value payload
     * @returns A handle action response
     */
    protected onSharePointTaskHandleActionAsync(_context: TurnContext, _aceRequest: AceRequest): Promise<HandleActionResponse>;
}
//# sourceMappingURL=sharePointActivityHandler.d.ts.map
